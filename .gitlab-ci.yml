image: docker:stable
# services:
#   - docker:dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  # DOCKER_HOST: tcp://docker:2375
  # DOCKER_DRIVER: overlay2
  # CONTAINER_TEST_IMAGE: $CI_PROJECT_NAME:dev
  # CONTAINER_RELEASE_IMAGE: $CI_PROJECT_NAME
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci-dev
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - export API_IMAGE_TAG=$CONTAINER_TEST_IMAGE
  - echo "SECRET_KEY=visivel\nDEBUG=False" > deploy/env
  # - docker login -u agorabot -p $DOCKER_HUB_PASSWORD

build:
  stage: build
  script:
    - docker-compose -f docker-compose.yml -f deploy/prod.yml build
    - docker push $CONTAINER_TEST_IMAGE

staticcheck:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE sh -c 'pip install -U flake8 && flake8 .'

tests:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    # - docker run $CONTAINER_TEST_IMAGE sh -c 'ls && ./manage.py test'
    - docker-compose -f docker-compose.yml -f deploy/prod.yml run sh -c 'ls && ./manage.py test'

# test2:
#   stage: test
#   before_script:
#     - pip install -Ur requirements.txt
#     - python manage.py migrate
#     - python manage.py collectstatic --noinput
#   script:
#     - python manage.py test

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  # only:
  #   - master

# deploy:
#   stage: deploy
#   script:
#     - ./deploy.sh
#   only:
#     - master
